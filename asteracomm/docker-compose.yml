services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: asterisk
      POSTGRES_USER: asterisk
      POSTGRES_PASSWORD: asterisk
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - asteracomm-network


  asterisk:
    build: ./asterisk
    container_name: asterisk
    volumes:
      - ./asterisk/config:/etc/asterisk
      - ./asterisk/odbc.ini:/etc/odbc.ini
      - ./asterisk/odbcinst.ini:/etc/odbcinst.ini
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
      - "5061:5061/udp"
      - "5061:5061/tcp"
      - "10000:20000/udp"
    networks:
      - asteracomm-network
    depends_on:
      - postgres


  asteracomm:
    build: ./asteracomm
    container_name: asteracomm-backend
    ports:
      - "8090:8090"
    volumes:
      - ./asteracomm/AsteraComm-current.jar:/app/AsteraComm-current.jar
    networks:
      - asteracomm-network
    depends_on:
      - postgres


  nginx:
    image: nginx:stable
    container_name: asteracomm-frontend
    volumes:
      - ./nginx:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    networks:
      - asteracomm-network
    depends_on:
      - asteracomm


volumes:
  postgres-data:

networks:
  asteracomm-network:
    driver: bridge
